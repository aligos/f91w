14496a2c674f1728c26d69a3e1f83c41
"use strict";var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports, "__esModule", { value: true });exports.queryByAPI = exports.queryAllByProps = exports.queryAllByText = exports.queryAllByType = exports.queryAllByName = exports.queryByTestId = exports.queryByProps = exports.queryByText = exports.queryByType = exports.queryByName = void 0;
var React = _interopRequireWildcard(require("react"));
var _getByAPI = require("./getByAPI");










var _errors = require("./errors");

var queryByName = function queryByName(instance) {return function (
  name)
  {
    (0, _errors.logDeprecationWarning)('queryByName', 'getByName');
    try {
      return (0, _getByAPI.getByName)(instance)(name);
    } catch (error) {
      return null;
    }
  };};exports.queryByName = queryByName;

var queryByType = function queryByType(instance) {return function (
  type)
  {
    try {
      return (0, _getByAPI.getByType)(instance)(type);
    } catch (error) {
      return null;
    }
  };};exports.queryByType = queryByType;

var queryByText = function queryByText(instance) {return function (
  text)
  {
    try {
      return (0, _getByAPI.getByText)(instance)(text);
    } catch (error) {
      return null;
    }
  };};exports.queryByText = queryByText;

var queryByProps = function queryByProps(instance) {return function (props)

  {
    try {
      return (0, _getByAPI.getByProps)(instance)(props);
    } catch (error) {
      return null;
    }
  };};exports.queryByProps = queryByProps;

var queryByTestId = function queryByTestId(instance) {return function (
  testID)
  {
    try {
      return (0, _getByAPI.getByTestId)(instance)(testID);
    } catch (error) {
      return null;
    }
  };};exports.queryByTestId = queryByTestId;

var queryAllByName = function queryAllByName(instance) {return function (
  name)
  {
    (0, _errors.logDeprecationWarning)('queryAllByName', 'getAllByName');
    try {
      return (0, _getByAPI.getAllByName)(instance)(name);
    } catch (error) {
      return [];
    }
  };};exports.queryAllByName = queryAllByName;

var queryAllByType = function queryAllByType(instance) {return function (
  type)
  {
    try {
      return (0, _getByAPI.getAllByType)(instance)(type);
    } catch (error) {
      return [];
    }
  };};exports.queryAllByType = queryAllByType;

var queryAllByText = function queryAllByText(instance) {return function (
  text)
  {
    try {
      return (0, _getByAPI.getAllByText)(instance)(text);
    } catch (error) {
      return [];
    }
  };};exports.queryAllByText = queryAllByText;

var queryAllByProps = function queryAllByProps(instance) {return function (props)

  {
    try {
      return (0, _getByAPI.getAllByProps)(instance)(props);
    } catch (error) {
      return [];
    }
  };};exports.queryAllByProps = queryAllByProps;

var queryByAPI = function queryByAPI(instance) {return {
    queryByTestId: queryByTestId(instance),
    queryByName: queryByName(instance),
    queryByType: queryByType(instance),
    queryByText: queryByText(instance),
    queryByProps: queryByProps(instance),
    queryAllByName: queryAllByName(instance),
    queryAllByType: queryAllByType(instance),
    queryAllByText: queryAllByText(instance),
    queryAllByProps: queryAllByProps(instance) };};exports.queryByAPI = queryByAPI;