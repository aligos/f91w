20139558557f2ce399178989be96b108
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.requireNativeViewManager = void 0;var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _react = _interopRequireDefault(require("react"));
var _lodash = _interopRequireDefault(require("lodash.omit"));
var _lodash2 = _interopRequireDefault(require("lodash.pick"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactNative = require("react-native");var _jsxFileName = "/Users/zeeizee/Javascript/F91w/node_modules/expo-react-native-adapter/src/NativeViewManagerAdapter.js";













var ViewPropTypesKeys = Object.keys(_reactNative.ViewPropTypes);

var getViewManagerAdapterNameForViewName = function getViewManagerAdapterNameForViewName(name) {return "ViewManagerAdapter_" + name;};

var createNativeComponentClass = function createNativeComponentClass(name) {var
  NativeComponent = function (_React$Component) {(0, _inherits2.default)(NativeComponent, _React$Component);function NativeComponent() {(0, _classCallCheck2.default)(this, NativeComponent);return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NativeComponent).apply(this, arguments));}(0, _createClass2.default)(NativeComponent, [{ key: "render", value: function render()

      {
        return _react.default.createElement(UnderlyingNativeComponent, (0, _extends2.default)({}, this.props, { __source: { fileName: _jsxFileName, lineNumber: 27 } }));
      } }]);return NativeComponent;}(_react.default.Component);NativeComponent.propTypes = (0, _objectSpread2.default)({}, _reactNative.ViewPropTypes, { proxiedProperties: _propTypes.default.object });


  var nativeComponentName = getViewManagerAdapterNameForViewName(name);

  var UnderlyingNativeComponent = (0, _reactNative.requireNativeComponent)(nativeComponentName, NativeComponent, {
    nativeOnly: Object.keys(_reactNative.UIManager[nativeComponentName].NativeProps).reduce(
    function (acc, key) {return (0, _objectSpread2.default)({}, acc, (0, _defineProperty2.default)({}, key, true));},
    {}) });



  NativeComponent.displayName = name;
  return NativeComponent;
};

var requireNativeViewManager = function requireNativeViewManager(name, component) {
  if (!_reactNative.NativeModules.ExpoNativeModuleProxy.viewManagersNames.includes(name)) {
    console.warn(
    "It seems the native view manager which you're trying to require by name" +
    "from NativeViewManagerAdapter isn't exported by expo-react-native-adapter." +
    ' Things may not work properly. Exported view managers: [' +
    _reactNative.NativeModules.ExpoNativeModuleProxy.viewManagersNames.join(', ') + ("], and you required \"" +
    name + "\"."));

  }

  var NativeComponent = createNativeComponentClass(name);
  var PropTypesKeys = [
  'children'].concat((0, _toConsumableArray2.default)(
  ViewPropTypesKeys), (0, _toConsumableArray2.default)(
  Object.keys(_reactNative.UIManager[getViewManagerAdapterNameForViewName(name)].NativeProps)), (0, _toConsumableArray2.default)(
  Object.keys(_reactNative.UIManager[getViewManagerAdapterNameForViewName(name)].directEventTypes)));var

  NativeComponentWrapper = function (_React$Component2) {(0, _inherits2.default)(NativeComponentWrapper, _React$Component2);function NativeComponentWrapper() {(0, _classCallCheck2.default)(this, NativeComponentWrapper);return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NativeComponentWrapper).apply(this, arguments));}(0, _createClass2.default)(NativeComponentWrapper, [{ key: "render", value: function render()
      {
        var nativeProps = (0, _lodash2.default)(this.props, PropTypesKeys);
        var proxiedProps = (0, _lodash.default)(this.props, PropTypesKeys);
        return _react.default.createElement(NativeComponent, (0, _extends2.default)({ proxiedProperties: proxiedProps }, nativeProps, { __source: { fileName: _jsxFileName, lineNumber: 66 } }));
      } }]);return NativeComponentWrapper;}(_react.default.Component);

  NativeComponentWrapper.displayName = "ViewWrapper<" + name + ">";
  return NativeComponentWrapper;
};exports.requireNativeViewManager = requireNativeViewManager;